# coding: utf-8

"""
    Signing Today Web

    *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter.   # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import signing_today_client
from signing_today_client.api.backoffice_api import BackofficeApi  # noqa: E501
from signing_today_client.rest import ApiException


class TestBackofficeApi(unittest.TestCase):
    """BackofficeApi unit test stubs"""

    def setUp(self):
        self.api = signing_today_client.api.backoffice_api.BackofficeApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_organization_id_alfresco_sync_get(self):
        """Test case for organization_id_alfresco_sync_get

        Sync all completed DSTs on Alfresco  # noqa: E501
        """
        pass

    def test_organization_id_alfresco_sync_post(self):
        """Test case for organization_id_alfresco_sync_post

        Sync all completed DSTs on Alfresco  # noqa: E501
        """
        pass

    def test_organization_id_delete(self):
        """Test case for organization_id_delete

        Enable or disable an Organization account.  # noqa: E501
        """
        pass

    def test_organization_id_get(self):
        """Test case for organization_id_get

        Retrieve info on one organization  # noqa: E501
        """
        pass

    def test_organization_id_public_get(self):
        """Test case for organization_id_public_get

        Retrieve public resources  # noqa: E501
        """
        pass

    def test_organization_id_put(self):
        """Test case for organization_id_put

        Update info on one organization  # noqa: E501
        """
        pass

    def test_organization_id_resource_get(self):
        """Test case for organization_id_resource_get

        Get an organization resource  # noqa: E501
        """
        pass

    def test_organization_id_resource_put(self):
        """Test case for organization_id_resource_put

        Create or overwrite an organization resource  # noqa: E501
        """
        pass

    def test_organization_resource_id_delete(self):
        """Test case for organization_resource_id_delete

        Delete an organization resource  # noqa: E501
        """
        pass

    def test_organization_resources_get(self):
        """Test case for organization_resources_get

        List all the organization resources  # noqa: E501
        """
        pass

    def test_organization_tags_get(self):
        """Test case for organization_tags_get

        Retrieve organization tags  # noqa: E501
        """
        pass

    def test_organizations_get(self):
        """Test case for organizations_get

        Get the list of organizations  # noqa: E501
        """
        pass

    def test_organizations_post(self):
        """Test case for organizations_post

        Create a new organization  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
