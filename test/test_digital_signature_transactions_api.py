# coding: utf-8

"""
    Signing Today Web

    *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter.   # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import signing_today_client
from signing_today_client.api.digital_signature_transactions_api import DigitalSignatureTransactionsApi  # noqa: E501
from signing_today_client.rest import ApiException


class TestDigitalSignatureTransactionsApi(unittest.TestCase):
    """DigitalSignatureTransactionsApi unit test stubs"""

    def setUp(self):
        self.api = signing_today_client.api.digital_signature_transactions_api.DigitalSignatureTransactionsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_d_s_ts_get(self):
        """Test case for d_s_ts_get

        Retrieve DSTs  # noqa: E501
        """
        pass

    def test_d_s_ts_post(self):
        """Test case for d_s_ts_post

        Create a new DST  # noqa: E501
        """
        pass

    def test_d_st_id_audit_get(self):
        """Test case for d_st_id_audit_get

        Retrieve the audit records associated to the DST  # noqa: E501
        """
        pass

    def test_d_st_id_delete(self):
        """Test case for d_st_id_delete

        Delete a DST  # noqa: E501
        """
        pass

    def test_d_st_id_fill_patch(self):
        """Test case for d_st_id_fill_patch

        Fill a form of a DST  # noqa: E501
        """
        pass

    def test_d_st_id_get(self):
        """Test case for d_st_id_get

        Retrieve a DST  # noqa: E501
        """
        pass

    def test_d_st_id_instantiate_post(self):
        """Test case for d_st_id_instantiate_post

        Instantiate a DST from a template  # noqa: E501
        """
        pass

    def test_d_st_id_modify_post(self):
        """Test case for d_st_id_modify_post

        Modify a published DST template  # noqa: E501
        """
        pass

    def test_d_st_id_notify_post(self):
        """Test case for d_st_id_notify_post

        Send notifications for a DST  # noqa: E501
        """
        pass

    def test_d_st_id_publish_post(self):
        """Test case for d_st_id_publish_post

        Publish a DST  # noqa: E501
        """
        pass

    def test_d_st_id_put(self):
        """Test case for d_st_id_put

        Update a DST  # noqa: E501
        """
        pass

    def test_d_st_id_replace_post(self):
        """Test case for d_st_id_replace_post

        Replace a rejected DST  # noqa: E501
        """
        pass

    def test_d_st_id_sign_doc_id_sign_id_get(self):
        """Test case for d_st_id_sign_doc_id_sign_id_get

        Return the address for signing  # noqa: E501
        """
        pass

    def test_d_st_id_templatize_post(self):
        """Test case for d_st_id_templatize_post

        Create a template from a DST  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
