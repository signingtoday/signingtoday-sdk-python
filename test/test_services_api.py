# coding: utf-8

"""
    Signing Today Web

    *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter.   # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import signing_today_client
from signing_today_client.api.services_api import ServicesApi  # noqa: E501
from signing_today_client.rest import ApiException


class TestServicesApi(unittest.TestCase):
    """ServicesApi unit test stubs"""

    def setUp(self):
        self.api = signing_today_client.api.services_api.ServicesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_auth_change_password_post(self):
        """Test case for auth_change_password_post

        Consume a token to change the password  # noqa: E501
        """
        pass

    def test_auth_password_lost_get(self):
        """Test case for auth_password_lost_get

        Request to recover own password  # noqa: E501
        """
        pass

    def test_auth_password_reset_get(self):
        """Test case for auth_password_reset_get

        Reset a user password with superuser  # noqa: E501
        """
        pass

    def test_auth_password_reset_post(self):
        """Test case for auth_password_reset_post

        Reset your own password  # noqa: E501
        """
        pass

    def test_auth_password_token_get(self):
        """Test case for auth_password_token_get

        Get token to change password  # noqa: E501
        """
        pass

    def test_auth_saml_post(self):
        """Test case for auth_saml_post

        Register or Update a SAML user  # noqa: E501
        """
        pass

    def test_auth_user(self):
        """Test case for auth_user

        Return the current logged in user  # noqa: E501
        """
        pass

    def test_configuration_get(self):
        """Test case for configuration_get

        Retrieve the App configuration  # noqa: E501
        """
        pass

    def test_logout_user(self):
        """Test case for logout_user

        Log out current user terminating the session  # noqa: E501
        """
        pass

    def test_oauth_token_post(self):
        """Test case for oauth_token_post

        Get the bearer token  # noqa: E501
        """
        pass

    def test_pdf_resource_id_thumbs_get(self):
        """Test case for pdf_resource_id_thumbs_get

        Retrieve a Resource (of service)  # noqa: E501
        """
        pass

    def test_service_change_password_post(self):
        """Test case for service_change_password_post

        Change the password of a service user  # noqa: E501
        """
        pass

    def test_service_users_sync_post(self):
        """Test case for service_users_sync_post

        Sync user accounts  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
