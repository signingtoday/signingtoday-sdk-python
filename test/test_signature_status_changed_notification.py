# coding: utf-8

"""
    Signing Today Web

    *Signing Today* is the perfect Digital Signature Gateway. Whenever in Your workflow You need to add one or more Digital Signatures to Your document, *Signing Today* is the right choice. You prepare Your documents, *Signing Today* takes care of all the rest: send invitations (`signature tickets`) to signers, collects their signatures, send You back the signed document. Integrating *Signing Today* in Your existing applications is very easy. Just follow these API specifications and get inspired by the many examples presented hereafter.   # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import signing_today_client
from signing_today_client.models.signature_status_changed_notification import SignatureStatusChangedNotification  # noqa: E501
from signing_today_client.rest import ApiException

class TestSignatureStatusChangedNotification(unittest.TestCase):
    """SignatureStatusChangedNotification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SignatureStatusChangedNotification
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = signing_today_client.models.signature_status_changed_notification.SignatureStatusChangedNotification()  # noqa: E501
        if include_optional :
            return SignatureStatusChangedNotification(
                status = 'pending', 
                group = 56, 
                action = 'fill', 
                dst = signing_today_client.models.signature_status_changed_notification_dst.SignatureStatusChangedNotification_dst(
                    id = '20b772dc-5ec2-4ae0-9c06-95238d40c6bc', 
                    title = 'ccvb', ), 
                fillable_form = signing_today_client.models.fillable_form.FillableForm(
                    _instance_id = 1, 
                    id = 2, 
                    document_id = 3, 
                    type = 'SignatureForm', 
                    position_x = 100.00, 
                    position_y = 58.14, 
                    width = 10.1, 
                    height = 5.66, 
                    page = 1, 
                    signer_id = 1, 
                    to_fill = True, 
                    filled = False, 
                    invisible = True, 
                    extra_data = {"signatureRequestId":1}, ), 
                signature = 56, 
                signer = 'admin.test.com', 
                document = signing_today_client.models.signature_status_changed_notification_document.SignatureStatusChangedNotification_document(
                    display_name = 'Sample', 
                    id = 56, 
                    order = 0, ), 
                automatic = False, 
                page = 56
            )
        else :
            return SignatureStatusChangedNotification(
        )

    def testSignatureStatusChangedNotification(self):
        """Test SignatureStatusChangedNotification"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
